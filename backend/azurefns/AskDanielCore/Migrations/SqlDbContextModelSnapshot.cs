// <auto-generated />
using System;
using AskDanielCore.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AskDanielCore.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AskDanielCore.Questions.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("AskedByIpAddressBytes")
                        .HasColumnName("AskedByIpAddress")
                        .HasColumnType("varbinary(16)")
                        .HasMaxLength(16);

                    b.Property<bool>("IsAuto")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = true,
                            Value = "Har du hørt om Rasmus Dybkjær!?"
                        },
                        new
                        {
                            Id = 2,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = true,
                            Value = "Er du god til at flyve med svævefly?"
                        },
                        new
                        {
                            Id = 3,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = true,
                            Value = "Arbejder du meget med data?"
                        },
                        new
                        {
                            Id = 4,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = true,
                            Value = "Parkerer du nogensinde ulovligt?"
                        },
                        new
                        {
                            Id = 5,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = false,
                            Value = "Er der en DAX-parser i TabularEditor3?"
                        },
                        new
                        {
                            Id = 6,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = false,
                            Value = "Bliver TabularEditor2 stadig vedligeholdt?"
                        },
                        new
                        {
                            Id = 7,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = false,
                            Value = "Findes der en gratis version af TabularEditor3?"
                        },
                        new
                        {
                            Id = 8,
                            AskedByIpAddressBytes = new byte[] { 212, 237, 135, 57 },
                            IsAuto = false,
                            Value = "Jeg er Microsoft MVP. Hvordan får jeg en gratis licens til TabularEditor3?"
                        });
                });

            modelBuilder.Entity("AskDanielCore.Responses.Models.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        },
                        new
                        {
                            Id = 4
                        });
                });

            modelBuilder.Entity("AskDanielCore.Responses.Models.Response", b =>
                {
                    b.OwnsMany("AskDanielCore.Responses.Models.Keyword", "Keywords", b1 =>
                        {
                            b1.Property<int>("ResponseId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(30)")
                                .HasMaxLength(30);

                            b1.HasKey("ResponseId", "Id");

                            b1.ToTable("Keywords");

                            b1.WithOwner()
                                .HasForeignKey("ResponseId");

                            b1.HasData(
                                new
                                {
                                    ResponseId = 1,
                                    Id = 1,
                                    Value = "smuk"
                                },
                                new
                                {
                                    ResponseId = 1,
                                    Id = 2,
                                    Value = "flot"
                                },
                                new
                                {
                                    ResponseId = 1,
                                    Id = 3,
                                    Value = "rasmus"
                                },
                                new
                                {
                                    ResponseId = 1,
                                    Id = 4,
                                    Value = "dybkjær"
                                },
                                new
                                {
                                    ResponseId = 1,
                                    Id = 5,
                                    Value = "kompetent"
                                },
                                new
                                {
                                    ResponseId = 2,
                                    Id = 6,
                                    Value = "flyve"
                                },
                                new
                                {
                                    ResponseId = 2,
                                    Id = 7,
                                    Value = "svæve"
                                },
                                new
                                {
                                    ResponseId = 2,
                                    Id = 8,
                                    Value = "svævefly"
                                },
                                new
                                {
                                    ResponseId = 2,
                                    Id = 9,
                                    Value = "rejse"
                                },
                                new
                                {
                                    ResponseId = 3,
                                    Id = 10,
                                    Value = "data"
                                },
                                new
                                {
                                    ResponseId = 3,
                                    Id = 11,
                                    Value = "datagud"
                                },
                                new
                                {
                                    ResponseId = 3,
                                    Id = 12,
                                    Value = "gud"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 13,
                                    Value = "parkering"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 14,
                                    Value = "qpark"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 15,
                                    Value = "parkeringsplads"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 16,
                                    Value = "parkere"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 17,
                                    Value = "parkerer"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 18,
                                    Value = "ulovligt"
                                });
                        });

                    b.OwnsMany("AskDanielCore.Responses.Models.ResponsePart", "ResponseParts", b1 =>
                        {
                            b1.Property<int>("ResponseId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Src")
                                .HasColumnType("nvarchar(500)")
                                .HasMaxLength(500);

                            b1.Property<string>("Type")
                                .HasColumnType("nvarchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(250)")
                                .HasMaxLength(250);

                            b1.HasKey("ResponseId", "Id");

                            b1.ToTable("ResponseParts");

                            b1.WithOwner()
                                .HasForeignKey("ResponseId");

                            b1.HasData(
                                new
                                {
                                    ResponseId = 1,
                                    Id = 1,
                                    Type = "String",
                                    Value = "Rasmus Dybkjær er et dejligt, smukt menneske. Når jeg ser ham tænker jeg \"wow!\". Det er svært at sætte ord på. Han er uden sammenligning den flotteste og mest kompetente person jeg kender!"
                                },
                                new
                                {
                                    ResponseId = 2,
                                    Id = 2,
                                    Type = "String",
                                    Value = "Jeg er helt vild med svævefly. Engang fløj jeg helt til Svalbard og tilbage ved hjælp af lidt varm luft. Helt fantastisk."
                                },
                                new
                                {
                                    ResponseId = 3,
                                    Id = 3,
                                    Type = "String",
                                    Value = "Jeg er helt tosset med data. Jeg er faktisk en "
                                },
                                new
                                {
                                    ResponseId = 3,
                                    Id = 4,
                                    Src = "https://www.kratosbi.com/data-god-daniel-otykier",
                                    Type = "Link",
                                    Value = "datagud 😎👴🙌"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 5,
                                    Type = "String",
                                    Value = "Jeg hader de fjolser der parkerer ulovligt! Især ude omkring Kattegatcentret. Der ringer jeg gerne til "
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 6,
                                    Src = "https://www.q-park.dk/da/kontakt-os/",
                                    Type = "Link",
                                    Value = "QPark"
                                },
                                new
                                {
                                    ResponseId = 4,
                                    Id = 7,
                                    Type = "String",
                                    Value = " så der kommer orden i sagerne"
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
